"""
test_raw.py - test basic handling on LCD12864 liquid crystal display over the SPI interface

* Author(s): Meurisse D. from MCHobby (shop.mchobby.be).

Products:
---> https://shop.mchobby.be/fr/gravity-boson/1878-afficheur-lcd-128x64-spi-3-fils-3232100018785-dfrobot.html

MCHobby investit du temps et des ressources pour écrire de la
documentation, du code et des exemples.
Aidez nous à en produire plus en achetant vos produits chez MCHobby.

------------------------------------------------------------------------

History:
  07 march 2021 - Dominique - initial writing
"""

from machine import SPI, Pin
import time

# PYBStick: S19=mosi, S23=sck, S26=/ss
spi = SPI( 1 )
spi.init( polarity=0, phase=1 )
cs = Pin( 'S26', Pin.OUT, value=0 )

DELAY_US = 80

def write_byte( dat ):
	cs.value( 1 )
	time.sleep_us( DELAY_US )
	spi.write( bytes([dat]) )
	cs.value( 0 )

def write_cmd( cmd ):
	print( 'Write_cmd( 0x%x )' % cmd )
	h = cmd & 0xF0
	l = (cmd & 0x0F) << 4
	write_byte( 0xF8 )
	write_byte( h )
	write_byte( l )


def write_dat( dat ):
	h = dat & 0xF0
	l = (dat & 0x0F) << 4
	write_byte( 0xfa )
	write_byte( h )
	write_byte( l )

def init():
	write_cmd( 0x30 )
	write_cmd( 0x0c )
	write_cmd( 0x01 )
	write_cmd( 0x06 )

def clear():
	write_cmd( 0x30 )
	write_cmd( 0x01 )

def display_string( x, y, s ):
	# x = line
	# y = column
	if x==0:
		y |= 0x80
	elif x==1:
		y |= 0x90
	elif x==2:
		y |= 0x88
	elif x==3:
		y |= 0x98
	else:
		raise Exception('bardaf')

	write_cmd( y )
	for i in range( len(s) ):
		print( s[i] )
		write_dat( ord(s[i]) )

def display_kanji( x, y, arr ):
	# x = line
	# y = column
	if x==0:
		y |= 0x80
	elif x==1:
		y |= 0x90
	elif x==2:
		y |= 0x88
	elif x==3:
		y |= 0x98
	else:
		raise Exception('bardaf')

	write_cmd( y )
	for i in range( len(arr) ):
		write_dat( arr[i] )

init()
clear()
#display_string( 0,0, "ABCDEFGHIJKLMN" )
#fails display_string( 0,0, "IJKLMNOP" )

show1 = [0xD6,0xC2,0xC1,0xA6,0xD3,0xDA,0xB4,0xF2,0xD4,0xEC,0xD6,0xD0,0xB9,0xFA,0xBB,0xFA]

show2 = [0xC6,0xF7,0xC8,0xCB,0xC5,0xE4,0xBC,0xFE,0xB5,0xDA,0xD2,0xBB,0xB3,0xAC,0xCA,0xD0]

show3 = [0xB8,0xFC,0xB6,0xE0,0xD7,0xCA,0xD1,0xB6,0xC7,0xEB,0xB5,0xC7,0xC2,0xBD,0xA3,0xBA]

clear()
display_kanji(0,0,show1)
time.sleep(2);
clear()
display_kanji(1,0,show2)
time.sleep(2);
clear()
display_kanji(2,0,show3)
time.sleep(2)

logo = [ 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x1F,
      0xF0,0x3F,0xFE,0x03,0xFF,0x07,0xFF,0xF0,
      0x04,0x00,0x0F,0x00,0x0F,0xFF,0xF0,0x7F,
      0xFC,0x3F,0xFF,0x0F,0xFF,0x87,0xFF,0xF0,
      0x04,0x00,0x07,0x00,0x0F,0xF0,0x38,0xFE,
      0x0E,0x3E,0x07,0x9F,0xC1,0xC0,0x7E,0x00,
      0x04,0x00,0x07,0x00,0x0F,0xF0,0x19,0xFC,
      0x07,0x3E,0x03,0x9F,0x80,0xE0,0x7E,0x00,
      0x04,0x00,0x07,0x1F,0xFF,0xF0,0x39,0xF8,
      0x03,0x3E,0x03,0xBF,0x00,0x60,0x7E,0x00,
      0x04,0x7F,0xC7,0x0F,0xFF,0xFF,0xF1,0xF8,
      0x03,0x3F,0xFF,0x3F,0x00,0x30,0x7E,0x00,
      0x04,0x7F,0xC7,0x00,0x0F,0xFF,0xF1,0xF8,
      0x01,0x3F,0xFF,0x3F,0x00,0x30,0x7E,0x00,
      0x04,0x7F,0xC7,0x00,0x0F,0xF0,0x39,0xF8,
      0x03,0x3E,0x07,0xBF,0x00,0x30,0x7E,0x00,
      0x04,0x7F,0xC7,0x00,0x0F,0xF0,0x19,0xF8,
      0x03,0x3E,0x03,0xBF,0x00,0x30,0x7E,0x00,
      0x04,0x00,0x07,0x1F,0xFF,0xF0,0x19,0xF8,
      0x07,0x3E,0x03,0x9F,0x80,0x60,0x7E,0x00,
      0x04,0x00,0x07,0x1F,0xFF,0xF0,0x18,0xFC,
      0x0E,0x3E,0x07,0x9F,0xC0,0xE0,0x7E,0x00,
      0x04,0x00,0x07,0x1F,0xFB,0xF0,0x18,0xFF,
      0xBC,0x3F,0xFF,0x0F,0xF3,0xC0,0x3E,0x00,
      0x04,0x00,0x0F,0x1F,0xF8,0xF0,0x18,0x3F,
      0xF0,0x0F,0xFC,0x03,0xFF,0x00,0x1E,0x00,
      0x07,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x07,0xC1,0xC0,0x00,0x07,0xC0,
      0x00,0x3F,0xC0,0x00,0x00,0x00,0x00,0x00,
      0x01,0xFE,0x1F,0xC7,0xE0,0x3E,0x1F,0xE0,
      0x7E,0x3F,0xC0,0x1F,0x07,0xE0,0x71,0xC0,
      0x03,0xFF,0x3C,0x0F,0xF0,0xFF,0x3D,0xE1,
      0xFE,0x3F,0x00,0x7E,0x1F,0xE0,0x71,0xC0,
      0x03,0x8F,0xB8,0x0E,0x71,0xE7,0x38,0xC3,
      0xC7,0x0E,0x00,0xF0,0x3C,0x70,0xF1,0xC0,
      0x03,0x0F,0xB8,0x1C,0x63,0xC3,0xB1,0xC7,
      0x83,0x06,0x00,0xE0,0x78,0x30,0xFB,0xC0,
      0x03,0x07,0xB8,0x1C,0xE3,0x83,0xB3,0x87,
      0x07,0x06,0x01,0xC0,0x70,0x70,0xFF,0xE0,
      0x03,0x0F,0x3F,0x1F,0xC7,0x07,0x3F,0xCE,
      0x07,0x06,0x01,0xC0,0xE0,0x71,0xFF,0xE0,
      0x03,0x1F,0x3F,0x1F,0x87,0x07,0x3F,0xEE,
      0x0E,0x06,0x01,0xC0,0xE0,0xE1,0xDE,0x60,
      0x03,0x3E,0x18,0x1F,0xC7,0x0F,0x38,0xEE,
      0x0E,0x06,0x01,0xC0,0xE0,0xE1,0x9E,0x60,
      0x03,0xF8,0x18,0x1F,0xF7,0x9E,0x31,0xCF,
      0x1C,0x06,0x00,0xFC,0xF1,0xC3,0x9C,0x70,
      0x03,0xF0,0x18,0x1C,0x73,0xFC,0x3B,0xC7,
      0xF8,0x06,0x1C,0xFC,0x7F,0x83,0x9C,0x70,
      0x03,0xC0,0x18,0x1C,0x03,0xF0,0x3F,0x07,
      0xF0,0x04,0x1C,0x3C,0x7F,0x03,0x00,0x60,
      0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ]

def draw_full_screen( p ):

	#int ygroup,x,y,i;
	#int temp;
	#int tmp

	for ygroup in range(64):
		if ygroup<32:
			x=0x80
			y=ygroup+0x80
		else:
			x=0x88
			y=ygroup-32+0x80

		write_cmd(0x34)
		write_cmd(y)
		write_cmd(x)
		write_cmd(0x30)
		tmp=ygroup*16
		for i in range(16):
			temp=p[tmp+i];
			write_dat(temp)

	write_cmd(0x34)
	write_cmd(0x36)

clear()
draw_full_screen( logo )
